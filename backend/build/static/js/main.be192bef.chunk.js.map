{"version":3,"sources":["components/Header.js","components/Footer.js","components/LoadingSpinner.js","components/Rating.js","components/PartialMovieData.js","components/ServerError.js","screens/HomeScreen.js","screens/NewMovieScreen.js","screens/EditMovieScreen.js","components/ModalDelete.js","components/Movie.js","screens/MovieScreen.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","className","expand","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Footer","LoadingSpinner","Spinner","animation","size","role","Rating","stars","PartialMovieData","movie","Card","style","width","Body","Title","name","rating","Text","genre","ServerError","handleClick","errorDetails","text","errorCode","onClick","HomeScreen","useState","movies","setMovies","showError","setShowError","setErrorDetails","moviesLoaded","setMoviesLoaded","getMovies","useCallback","a","axios","get","data","errorDetailsFormater","errObj","response","status","useEffect","map","key","length","NewMovieScreen","alert","useAlert","movieId","setMovieId","redirect","setRedirect","showLoader","setShowLoader","explicit","plot","newMovie","setNewMovie","handleExplicitChange","event","value","target","preventDefault","isValidNewMovie","post","success","show","type","error","statusText","trim","renderRedirect","Form","onSubmit","Group","controlId","Label","Control","onChange","placeholder","as","max","min","Check","inline","checked","label","rows","EditMovieScren","useParams","setMovie","getMovie","isValidmovie","put","bind","ModalDelete","forwardRef","ref","setShow","handleClose","deleteMovie","delete","useImperativeHandle","openModal","Modal","onHide","closeButton","Movie","useRef","current","MovieScreen","movieLoaded","setMovieLoaded","App","path","component","exact","EditMovieScreen","Boolean","window","location","hostname","match","options","position","positions","TOP_CENTER","timeout","offset","transition","transitions","FADE","ReactDOM","render","StrictMode","template","AlertTemplate","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"uOAiCeA,EA5BA,WACb,OACE,gCACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,UAAU,cAAcC,OAAO,MAC/C,kBAACC,EAAA,EAAD,KACE,kBAAC,gBAAD,CAAeC,GAAG,KAChB,kBAACL,EAAA,EAAOM,MAAR,mBAEF,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKT,UAAU,WACb,kBAAC,gBAAD,CAAeG,GAAG,KAChB,kBAACM,EAAA,EAAIC,KAAL,gBAGF,kBAAC,gBAAD,CAAeP,GAAG,QAChB,kBAACM,EAAA,EAAIC,KAAL,KACE,uBAAGV,UAAU,gBADf,qBCNDW,EAZA,WACb,OACE,gCACE,kBAACT,EAAA,EAAD,KACE,yBAAKF,UAAU,eACb,6D,yDCIKY,EAVQ,WACrB,OACE,yBAAKZ,UAAU,eACb,kBAACa,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,KAAKC,KAAK,UACzC,0BAAMhB,UAAU,WAAhB,iB,SCuBOiB,EA3BA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACE,8BACGA,GAAS,GAAK,uBAAGlB,UAAU,gBAC3BkB,GAAS,GAAK,uBAAGlB,UAAU,gBAC3BkB,GAAS,GAAK,uBAAGlB,UAAU,gBAC3BkB,GAAS,GAAK,uBAAGlB,UAAU,gBAC3BkB,GAAS,GAAK,uBAAGlB,UAAU,gBAC3BkB,EAAQ,GAAK,uBAAGlB,UAAU,gBAC1BkB,GAAS,GAAK,uBAAGlB,UAAU,gBAC3BkB,EAAQ,GAAK,uBAAGlB,UAAU,gBAC1BkB,GAAS,GAAK,uBAAGlB,UAAU,gBAC3BkB,EAAQ,GAAK,uBAAGlB,UAAU,gBAC1BkB,GAAS,GAAK,uBAAGlB,UAAU,gBAC3BkB,EAAQ,GAAK,uBAAGlB,UAAU,gBAC1BkB,GAAS,GAAK,uBAAGlB,UAAU,gBAC3BkB,EAAQ,GAAK,uBAAGlB,UAAU,gBAC1BkB,GAAS,GAAK,uBAAGlB,UAAU,gBAC3BkB,EAAQ,GAAK,uBAAGlB,UAAU,gBAC1BkB,GAAS,GAAK,uBAAGlB,UAAU,gBAC3BkB,EAAQ,GAAK,uBAAGlB,UAAU,gBAC1BkB,GAAS,IAAM,uBAAGlB,UAAU,gBAC5BkB,EAAQ,IAAM,uBAAGlB,UAAU,gBApB9B,KAoBoDkB,EApBpD,QCmBWC,EAlBU,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,UACpB,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,KAAaL,EAAMM,MACnB,kBAAC,EAAD,CAAQR,MAAOE,EAAMO,SACrB,6BACA,kBAACN,EAAA,EAAKO,KAAN,eAAmBR,EAAMS,OACzB,kBAAC,OAAD,CAAM1B,GAAE,kBAAaiB,EAAMZ,KACzB,4BAAQR,UAAU,0BAChB,uBAAGA,UAAU,uBADf,gBCuBK8B,EAlCK,SAAC,GAGd,IAFLC,EAEI,EAFJA,YAEI,IADJC,oBACI,MADW,CAAEC,KAAM,cAAeC,UAAW,GAC7C,EACJ,OACE,yBAAKlC,UAAU,oBACb,wBAAIA,UAAU,eAAd,yBACA,2BAAIgC,EAAaC,MACjB,wBAAIjC,UAAU,QAAQgC,EAAaE,WACP,MAA3BF,EAAaE,WACZ,yBAAKlC,UAAU,QACb,4BAAQmC,QAASJ,EAAa/B,UAAU,mBAAxC,WAKwB,MAA3BgC,EAAaE,WACZ,yBAAKlC,UAAU,QACb,4BAAQmC,QAASJ,EAAa/B,UAAU,mBAAxC,WAKwB,MAA3BgC,EAAaE,WACZ,yBAAKlC,UAAU,QACb,kBAAC,OAAD,CAAMG,GAAG,KACP,4BAAQH,UAAU,mBAAlB,sBC6CGoC,EApEI,WAAO,IAAD,EACKC,mBAAS,IADd,mBAChBC,EADgB,KACRC,EADQ,OAEWF,oBAAS,GAFpB,mBAEhBG,EAFgB,KAELC,EAFK,OAGiBJ,mBAAS,CAAEJ,KAAM,GAAIC,UAAW,IAHjD,mBAGhBF,EAHgB,KAGFU,EAHE,OAIiBL,oBAAS,GAJ1B,mBAIhBM,EAJgB,KAIFC,EAJE,KAMjBC,EAAYC,sBAAW,sBAAC,8BAAAC,EAAA,6DAC5BN,GAAa,GACbG,GAAgB,GAFY,kBAIHI,IAAMC,IAAI,kBAJP,gBAIlBC,EAJkB,EAIlBA,KACRX,EAAUW,EAAKZ,QACfM,GAAgB,GANU,kDAQ1BO,EAAqB,EAAD,IACpBP,GAAgB,GAChBH,GAAa,GAVa,0DAY3B,IAMH,SAASU,EAAqBC,GAAS,IAC7BC,EAAaD,EAAbC,SACHA,IACmB,MAApBA,EAASC,QACXZ,EAAgB,CACdT,KAAM,yBACNC,UAAWmB,EAASC,SAGA,MAApBD,EAASC,QACXZ,EAAgB,CACdT,KAAM,qCACNC,UAAWmB,EAASC,UAK1B,OArBAC,qBAAU,WACRV,MACC,IAoBD,6BACE,sCACA,8BACkB,IAAjBF,IAA2BH,GAAa,kBAAC,EAAD,OAEvB,IAAjBG,GACC,yBAAK3C,UAAU,mBACZsC,GACCA,EAAOkB,KAAI,SAACpC,GAAD,OACT,yBAAKqC,IAAKrC,EAAMZ,GAAIR,UAAU,cAC5B,kBAAC,EAAD,CAAkBoB,MAAOA,UAKjB,IAAjBuB,GAAyBL,GAA4B,IAAlBA,EAAOoB,SAAiBlB,GAC1D,wBAAIxC,UAAU,oBAAd,cAGDwC,GACC,kBAAC,EAAD,CAAaT,YAAac,EAAWb,aAAcA,M,cCgH5C2B,EA7KQ,WACrB,IAAMC,EAAQC,cADa,EAEGxB,mBAAS,GAFZ,mBAEpByB,EAFoB,KAEXC,EAFW,OAGK1B,oBAAS,GAHd,mBAGpB2B,EAHoB,KAGVC,EAHU,OAIS5B,oBAAS,GAJlB,mBAIpB6B,EAJoB,KAIRC,EAJQ,OAKK9B,mBAAS,CACvCX,KAAM,GACNG,MAAO,SACPF,OAAQ,EACRyC,UAAU,EACVC,KAAM,KAVmB,mBAKpBC,EALoB,KAKVC,EALU,KA2B3B,SAASC,EAAqBC,GAC5B,IAAMC,EAA+B,SAAvBD,EAAME,OAAOD,MAE3BH,EAAY,2BAAKD,GAAN,IAAgBF,SAAUM,KA9BZ,4CAoC3B,WAA4BD,GAA5B,mBAAA1B,EAAA,yDACE0B,EAAMG,kBACFC,IAFN,wBAGIV,GAAc,GAHlB,kBAK6BnB,IAAM8B,KAAK,iBAAkBR,GAL1D,qBAKcpB,EALd,EAKcA,MACC6B,QANf,wBAOQZ,GAAc,GACdJ,EAAWb,EAAK9B,MAAM,GAAGZ,IACzB+D,EAAY,CACV7C,KAAM,GACNG,MAAO,SACPF,OAAQ,EACRyC,UAAU,EACVC,KAAM,KAERT,EAAMoB,KAAK,eAAgB,CAAEC,KAAM,YACnChB,GAAY,GAjBpB,qFAqBcf,EAAS,KAAMG,SAAfH,MACCgC,OACPtB,EAAMoB,KAAK9B,EAAKgC,MAAO,CAAED,KAAM,UAEH,MAA1B,KAAM5B,SAASC,QACjBM,EAAMoB,KAAK,KAAM3B,SAAS8B,WAAY,CAAEF,KAAM,UAEhDd,GAAc,GA5BpB,2BAgCEP,EAAMoB,KAAK,8BAA+B,CAAEC,KAAM,UAhCpD,2DApC2B,sBAuE3B,SAASJ,IACP,OAAoC,IAAhCP,EAAS5C,KAAK0D,OAAO1B,SACY,IAAjCY,EAASzC,MAAMuD,OAAO1B,WACtBY,EAAS3C,OAAS,GAAK2C,EAAS3C,OAAS,KACT,IAAhC2C,EAASD,KAAKe,OAAO1B,SAU3B,OACE,6BAPF,WACE,GAAIM,EACF,OAAO,kBAAC,IAAD,CAAU7D,GAAE,kBAAa2D,KAM/BuB,GACD,yCACA,6BACCnB,GAAc,kBAAC,EAAD,MACf,kBAACoB,EAAA,EAAD,CAAMC,SA3FiB,6CA6FrB,kBAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,MAAN,aACA,kBAACJ,EAAA,EAAKK,QAAN,CACEV,KAAK,OACLvD,KAAK,OACLgD,MAAOJ,EAAS5C,KAChBkE,SAtFV,SAA0BnB,GACxBF,EAAY,2BAAKD,GAAN,IAAgB5C,KAAM+C,EAAME,OAAOD,UAsFtCmB,YAAY,gBAIhB,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,MAAN,cACA,kBAACJ,EAAA,EAAKK,QAAN,CACEG,GAAG,SACHpB,MAAOJ,EAASzC,MAChB+D,SA7FV,SAA2BnB,GACzBF,EAAY,2BAAKD,GAAN,IAAgBzC,MAAO4C,EAAME,OAAOD,UA6FvCmB,YAAY,eAEZ,4BAAQnB,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,mBAAd,mBACA,4BAAQA,MAAM,YAAd,cAIJ,kBAACY,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,MAAN,eACA,kBAACJ,EAAA,EAAKK,QAAN,CACEV,KAAK,SACLc,IAAI,KACJC,IAAI,IACJtB,MAAOJ,EAAS3C,OAChBiE,SA/GV,SAA4BnB,GAC1B,IAAI9C,EAAS8C,EAAME,OAAOD,MACtB/C,EAAS,IAAMA,EAAS,EAC1BiC,EAAMoB,KAAK,6BAA8B,CAAEC,KAAM,UAGnDV,EAAY,2BAAKD,GAAN,IAAgB3C,aA0GnBkE,YAAY,kBAIhB,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,MAAN,iBACA,6BACA,kBAACJ,EAAA,EAAKW,MAAN,CACEhB,KAAK,QACLiB,QAAM,EACNxE,KAAK,aACLkE,SAAUpB,EACV2B,SAA+B,IAAtB7B,EAASF,SAClBM,MAAM,OACNlE,GAAE,MACF4F,MAAM,QAER,kBAACd,EAAA,EAAKW,MAAN,CACEhB,KAAK,QACLiB,QAAM,EACNxE,KAAK,aACLkE,SAAUpB,EACV2B,SAA+B,IAAtB7B,EAASF,SAClBM,MAAM,QACNlE,GAAE,KACF4F,MAAM,QAIV,kBAACd,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,MAAN,aACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcG,GAAG,WAAWO,KAAK,IAAIT,SAlI7C,SAA0BnB,GACxBF,EAAY,2BAAKD,GAAN,IAAgBD,KAAMI,EAAME,OAAOD,MAAMU,cAoIhD,4BAAQpF,UAAU,yBAAyBiF,KAAK,UAAhD,aC+COqB,EAnNQ,WACrB,IAAM1C,EAAQC,cACNrD,EAAO+F,cAAP/F,GAFmB,EAGK6B,oBAAS,GAHd,mBAGpB2B,EAHoB,KAGVC,EAHU,OAIS5B,oBAAS,GAJlB,mBAIpB6B,EAJoB,KAIRC,EAJQ,OAKO9B,oBAAS,GALhB,mBAKpBG,EALoB,KAKTC,EALS,OAMaJ,mBAAS,IANtB,mBAMpBL,EANoB,KAMNU,EANM,OAODL,mBAAS,CACjCX,KAAM,GACNG,MAAO,SACPF,OAAQ,EACRyC,UAAU,EACVC,KAAM,GACN7D,GAAI,KAbqB,mBAOpBY,EAPoB,KAOboF,EAPa,cAoBZC,EApBY,8EAoB3B,WAAwBjG,GAAxB,mBAAAuC,EAAA,6DACEN,GAAa,GACb0B,GAAc,GAFhB,kBAI2BnB,IAAMC,IAAN,yBAA4BzC,IAJvD,gBAIY0C,EAJZ,EAIYA,KACA9B,EAAU8B,EAAV9B,MACRoF,EAASpF,GACT+C,GAAc,GAPlB,6GAUkC,MAA1B,KAAMd,SAASC,OACjBZ,EAAgB,CAAET,KAAM,KAAMoB,SAAS8B,WAAYjD,UAAW,MAC3B,MAA1B,KAAMmB,SAASC,QACxBZ,EAAgB,CAAET,KAAM,KAAMoB,SAAS8B,WAAYjD,UAAW,MAEhEO,GAAa,GAfjB,2DApB2B,sBAqD3B,SAAS+B,EAAqBC,GAC5B,IAAMC,EAA+B,SAAvBD,EAAME,OAAOD,MAE3B8B,EAAS,2BAAKpF,GAAN,IAAagD,SAAUM,KAxDN,4CA8D3B,WAA4BD,GAA5B,iBAAA1B,EAAA,yDACE0B,EAAMG,kBACF8B,IAFN,wBAGIvC,GAAc,GAHlB,kBAK6BnB,IAAM2D,IAAN,yBAA4BnG,GAAMY,GAL/D,sBAKc8B,KACC6B,QANf,wBAOQZ,GAAc,GACdP,EAAMoB,KAAK,iBAAkB,CAAEC,KAAM,YACrChB,GAAY,GATpB,qFAacf,EAAS,KAAMG,SAAfH,MACCgC,MACPtB,EAAMoB,KAAK9B,EAAKgC,MAAO,CAAED,KAAM,UACI,MAA1B,KAAM5B,SAASC,QACxBM,EAAMoB,KAAK,sDAAuD,CAChEC,KAAM,UAGVd,GAAc,GArBpB,2BAyBEP,EAAMoB,KAAK,8BAA+B,CACxCC,KAAM,UA1BV,2DA9D2B,sBAkG3B,SAASyB,IACP,OAAiC,IAA7BtF,EAAMM,KAAK0D,OAAO1B,SACY,IAA9BtC,EAAMS,MAAMuD,OAAO1B,WACnBtC,EAAMO,OAAS,GAAKP,EAAMO,OAAS,KACN,IAA7BP,EAAMiD,KAAKe,OAAO1B,SAIxB,OA1FAH,qBAAU,WACRkD,EAASjG,KACR,CAACA,IAyFF,6BAfF,WACE,GAAIwD,EACF,OAAO,kBAAC,IAAD,CAAU7D,GAAE,kBAAaK,KAc/B6E,GACD,0CACA,6BACCnB,IAAe1B,GAAa,kBAAC,EAAD,OAC3BA,IAAc0B,GAAc9C,GAC5B,kBAACkE,EAAA,EAAD,CAAMC,SAjHe,6CAmHnB,kBAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,MAAN,aACA,kBAACJ,EAAA,EAAKK,QAAN,CACEV,KAAK,OACLvD,KAAK,OACLgD,MAAOtD,EAAMM,KACbkE,SAlFZ,SAA0BnB,GACxB+B,EAAS,2BAAKpF,GAAN,IAAaM,KAAM+C,EAAME,OAAOD,UAkF9BmB,YAAY,gBAIhB,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,MAAN,cACA,kBAACJ,EAAA,EAAKK,QAAN,CACEG,GAAG,SACHpB,MAAOtD,EAAMS,MACb+D,SAzFZ,SAA2BnB,GACzB+B,EAAS,2BAAKpF,GAAN,IAAaS,MAAO4C,EAAME,OAAOD,UAyF/BmB,YAAY,eAEZ,4BAAQnB,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,mBAAd,mBACA,4BAAQA,MAAM,YAAd,cAIJ,kBAACY,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,MAAN,eACA,kBAACJ,EAAA,EAAKK,QAAN,CACEV,KAAK,SACLc,IAAI,KACJC,IAAI,IACJtB,MAAOtD,EAAMO,OACbiE,SA5GZ,SAA4BnB,GAC1B,IAAI9C,EAAS8C,EAAME,OAAOD,MACtB/C,EAAS,IAAMA,EAAS,EAC1BiC,EAAMoB,KAAK,6BAA8B,CAAEC,KAAM,UAGnDuB,EAAS,2BAAKpF,GAAN,IAAaO,aAuGXkE,YAAY,kBAIhB,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,MAAN,iBACA,6BACA,kBAACJ,EAAA,EAAKW,MAAN,CACEhB,KAAK,QACLiB,QAAM,EACNxE,KAAK,aACLkE,SAAUpB,EACV2B,SAA4B,IAAnB/E,EAAMgD,SACfM,MAAM,OACNlE,GAAE,MACF4F,MAAM,QAER,kBAACd,EAAA,EAAKW,MAAN,CACEhB,KAAK,QACLiB,QAAM,EACNxE,KAAK,aACLkE,SAAUpB,EACV2B,SAA4B,IAAnB/E,EAAMgD,SACfM,MAAM,QACNlE,GAAE,KACF4F,MAAM,QAIV,kBAACd,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,MAAN,aACA,kBAACJ,EAAA,EAAKK,QAAN,CACEG,GAAG,WACHO,KAAK,IACL3B,MAAOtD,EAAMiD,KACbuB,SAnIZ,SAA0BnB,GACxB+B,EAAS,2BAAKpF,GAAN,IAAaiD,KAAMI,EAAME,OAAOD,MAAMU,cAsIxC,4BAAQpF,UAAU,yBAAyBiF,KAAK,UAAhD,UAGA,kBAAC,OAAD,CAAM9E,GAAE,kBAAaK,IACnB,4BAAQR,UAAU,+BAAlB,YAILwC,GACC,kBAAC,EAAD,CACET,YAAa0E,EAASG,U,EAAWpG,GACjCwB,aAAcA,M,QCzJT6E,EArDKC,sBAAW,WAAcC,GAAS,IAApBjD,EAAmB,EAAnBA,QAAmB,EACnBzB,oBAAS,GADU,mBAC5C2B,EAD4C,KAClCC,EADkC,KAE7CL,EAAQC,cAFqC,EAG3BxB,oBAAS,GAHkB,mBAG5C2C,EAH4C,KAGtCgC,EAHsC,KAK7CC,EAAc,WAClBD,GAAQ,IAGJE,EAAW,uCAAG,4BAAAnE,EAAA,sEACKC,IAAMmE,OAAN,yBAA+BrD,IADpC,sBACVZ,KACC6B,QAFS,uBAGhBnB,EAAMmB,QAAQ,kBACdd,GAAY,GAJI,0BAOlB+C,GAAQ,GAPU,2CAAH,qDAuBjB,OAXAI,8BAAoBL,GAAK,WACvB,MAAO,CACLM,UAAW,kBAJUL,GAAQ,QAc/B,yBAAKD,IAAKA,GANZ,WACE,GAAI/C,EACF,OAAO,kBAAC,IAAD,CAAU7D,GAAE,MAKlBkF,GACD,kBAACiC,EAAA,EAAD,CAAOtC,KAAMA,EAAMlE,WAAW,EAAOyG,OAAQN,GAC3C,kBAACK,EAAA,EAAMzH,OAAP,CAAc2H,aAAW,GACvB,kBAACF,EAAA,EAAM7F,MAAP,sBAEF,kBAAC6F,EAAA,EAAM9F,KAAP,sBACA,kBAAC8F,EAAA,EAAM3G,OAAP,KACE,4BAAQX,UAAU,yBAAyBmC,QAAS8E,GAApD,SAGA,4BAAQjH,UAAU,wBAAwBmC,QAAS+E,GAAnD,gBCHKO,EA1CD,SAAC,GAAe,IAAbrG,EAAY,EAAZA,MACT2F,EAAMW,mBAIZ,OACE,oCACE,wBAAI1H,UAAU,QAAQoB,EAAMM,MAC5B,kBAAC,EAAD,CAAQR,MAAOE,EAAMO,SACrB,wBAAI3B,UAAU,QAAd,UAA6BoB,EAAMS,OACnC,6BACA,2BAAIT,EAAMiD,MACV,6BACA,4BACsB,IAAnBjD,EAAMgD,UACL,0BAAMpE,UAAU,gBACd,uBAAGA,UAAU,iBADf,kDAKkB,IAAnBoB,EAAMgD,UACL,0BAAMpE,UAAU,eACd,uBAAGA,UAAU,uBADf,2CAMJ,yBAAKA,UAAU,uBACb,kBAAC,OAAD,CAAMG,GAAE,kBAAaiB,EAAMZ,GAAnB,UACN,4BAAQR,UAAU,0BAChB,uBAAGA,UAAU,gBADf,UAIF,4BAAQmC,QA/BI,WAChB4E,EAAIY,QAAQN,aA8BoBrH,UAAU,yBACpC,uBAAGA,UAAU,gBADf,WAGA,kBAAC,EAAD,CAAa+G,IAAKA,EAAKjD,QAAS1C,EAAMZ,QC8B/BoH,EAhEK,WAAO,IACjBpH,EAAO+F,cAAP/F,GADgB,EAEE6B,mBAAS,IAFX,mBAEjBjB,EAFiB,KAEVoF,EAFU,OAGgBnE,mBAAS,IAHzB,mBAGjBL,EAHiB,KAGHU,EAHG,OAIUL,oBAAS,GAJnB,mBAIjBG,EAJiB,KAINC,EAJM,OAKcJ,oBAAS,GALvB,mBAKjBwF,EALiB,KAKJC,EALI,KAOlBrB,EAAW3D,sBAAW,sBAAC,8BAAAC,EAAA,6DAC3BN,GAAa,GADc,kBAGFO,IAAMC,IAAN,yBAA4BzC,IAH1B,gBAGjB0C,EAHiB,EAGjBA,KACR4E,GAAe,GACftB,EAAStD,EAAK9B,OALW,kDAOzB+B,EAAqB,EAAD,IACpBV,GAAa,GARY,0DAU1B,CAACjC,IAMJ,SAAS2C,EAAqBC,GAAS,IAC7BC,EAAaD,EAAbC,SACHA,IACmB,MAApBA,EAASC,QACXZ,EAAgB,CACdT,KAAM,yBACNC,UAAWmB,EAASC,SAGA,MAApBD,EAASC,QACXZ,EAAgB,CACdT,KAAM,qCACNC,UAAWmB,EAASC,SAGA,MAApBD,EAASC,QACXZ,EAAgB,CACdT,KAAM,sBACNC,UAAWmB,EAASC,UAK1B,OA3BAC,qBAAU,WACRkD,MACC,CAACA,IA0BF,6BACE,6CACA,6BACA,kBAAC,OAAD,CAAMtG,GAAG,KACP,4BAAQH,UAAU,0BAChB,uBAAGA,UAAU,iCADf,WAIe,IAAhB6H,IAA0BrF,GAAa,kBAAC,EAAD,MACvCpB,IAAyB,IAAhByG,IAAyBrF,GAAa,kBAAC,EAAD,CAAOpB,MAAOA,KAC7C,IAAhByG,GAAyBrF,GACxB,kBAAC,EAAD,CAAaT,YAAa0E,EAAUzE,aAAcA,MCnC3C+F,MAjBf,WACE,OACE,kBAAC,gBAAD,KACE,kBAAC,EAAD,MACA,kBAAC7H,EAAA,EAAD,KACE,0BAAMF,UAAU,QACd,kBAAC,IAAD,CAAOgI,KAAK,IAAIC,UAAW7F,EAAY8F,OAAK,IAC5C,kBAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWL,EAAaM,OAAK,IACvD,kBAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWE,IAC1C,kBAAC,IAAD,CAAOH,KAAK,OAAOC,UAAWtE,MAGlC,kBAAC,EAAD,QCbcyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPN,IAAMC,EAAU,CAEdC,SAAUC,IAAUC,WACpBC,QAAS,IACTC,OAAQ,OAERC,WAAYC,IAAYC,MAG1BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,eAAeC,SAAUC,KAAmBb,GAC1C,kBAAC,EAAD,QAGJc,SAASC,eAAe,SDyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA7E,GACL8E,QAAQ9E,MAAMA,EAAM+E,a","file":"static/js/main.be192bef.chunk.js","sourcesContent":["import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport { LinkContainer } from 'react-router-bootstrap';\nconst Header = () => {\n  return (\n    <header>\n      <Navbar bg=\"dark\" className=\"navbar-dark\" expand=\"lg\">\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>Movie app</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/\">\n                <Nav.Link>Movies</Nav.Link>\n              </LinkContainer>\n\n              <LinkContainer to=\"/add\">\n                <Nav.Link>\n                  <i className=\"fas fa-plus\"></i> Add movie\n                </Nav.Link>\n              </LinkContainer>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <div className=\"text-center\">\n          <p>Copyright &copy;MovieApp2020</p>\n        </div>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"text-center\">\n      <Spinner animation=\"border\" size=\"lg\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\n\nconst Rating = ({ stars }) => {\n  return (\n    <span>\n      {stars >= 1 && <i className=\"fas fa-star\"></i>}\n      {stars <= 1 && <i className=\"far fa-star\"></i>}\n      {stars >= 2 && <i className=\"fas fa-star\"></i>}\n      {stars <= 2 && <i className=\"far fa-star\"></i>}\n      {stars >= 3 && <i className=\"fas fa-star\"></i>}\n      {stars < 3 && <i className=\"far fa-star\"></i>}\n      {stars >= 4 && <i className=\"fas fa-star\"></i>}\n      {stars < 4 && <i className=\"far fa-star\"></i>}\n      {stars >= 5 && <i className=\"fas fa-star\"></i>}\n      {stars < 5 && <i className=\"far fa-star\"></i>}\n      {stars >= 6 && <i className=\"fas fa-star\"></i>}\n      {stars < 6 && <i className=\"far fa-star\"></i>}\n      {stars >= 7 && <i className=\"fas fa-star\"></i>}\n      {stars < 7 && <i className=\"far fa-star\"></i>}\n      {stars >= 8 && <i className=\"fas fa-star\"></i>}\n      {stars < 8 && <i className=\"far fa-star\"></i>}\n      {stars >= 9 && <i className=\"fas fa-star\"></i>}\n      {stars < 9 && <i className=\"far fa-star\"></i>}\n      {stars >= 10 && <i className=\"fas fa-star\"></i>}\n      {stars < 10 && <i className=\"far fa-star\"></i>}| {stars}/10\n    </span>\n  );\n};\n\nexport default Rating;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Rating from './Rating';\n\nconst PartialMovieData = ({ movie }) => {\n  return (\n    <Card style={{ width: '18rem' }}>\n      <Card.Body>\n        <Card.Title>{movie.name}</Card.Title>\n        <Rating stars={movie.rating} />\n        <hr />\n        <Card.Text>Genre: {movie.genre}</Card.Text>\n        <Link to={`/movies/${movie.id}`}>\n          <button className=\"btn btn-primary btn-sm\">\n            <i className=\"fas fa-info-circle\"></i> Details\n          </button>\n        </Link>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PartialMovieData;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ServerError = ({\n  handleClick,\n  errorDetails = { text: 'No details.', errorCode: 0 },\n}) => {\n  return (\n    <div className=\"text-center mt-5\">\n      <h3 className=\"text-danger\">Something went wrong.</h3>\n      <p>{errorDetails.text}</p>\n      <h1 className=\"mt-3\">{errorDetails.errorCode}</h1>\n      {errorDetails.errorCode === 500 && (\n        <div className=\"mt-3\">\n          <button onClick={handleClick} className=\"btn btn-success\">\n            Reload\n          </button>\n        </div>\n      )}\n      {errorDetails.errorCode === 429 && (\n        <div className=\"mt-3\">\n          <button onClick={handleClick} className=\"btn btn-success\">\n            Reload\n          </button>\n        </div>\n      )}\n      {errorDetails.errorCode === 404 && (\n        <div className=\"mt-3\">\n          <Link to=\"/\">\n            <button className=\"btn btn-success\">Back to movies</button>\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ServerError;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport PartialMovieData from '../components/PartialMovieData';\nimport ServerError from '../components/ServerError';\n\nconst HomeScreen = () => {\n  const [movies, setMovies] = useState([]);\n  const [showError, setShowError] = useState(false);\n  const [errorDetails, setErrorDetails] = useState({ text: '', errorCode: 0 });\n  const [moviesLoaded, setMoviesLoaded] = useState(false);\n\n  const getMovies = useCallback(async () => {\n    setShowError(false);\n    setMoviesLoaded(false);\n    try {\n      const { data } = await axios.get('/api/v1/movies');\n      setMovies(data.movies);\n      setMoviesLoaded(true);\n    } catch (error) {\n      errorDetailsFormater(error);\n      setMoviesLoaded(true);\n      setShowError(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  function errorDetailsFormater(errObj) {\n    const { response } = errObj;\n    if (!response) return;\n    if (response.status === 500) {\n      setErrorDetails({\n        text: 'Internal server error.',\n        errorCode: response.status,\n      });\n    }\n    if (response.status === 429) {\n      setErrorDetails({\n        text: 'Too many requests. Wait 3 minutes.',\n        errorCode: response.status,\n      });\n    }\n  }\n\n  return (\n    <div>\n      <h3>Movies</h3>\n      <hr />\n      {moviesLoaded === false && !showError && <LoadingSpinner />}\n\n      {moviesLoaded === true && (\n        <div className=\"movie-item-list\">\n          {movies &&\n            movies.map((movie) => (\n              <div key={movie.id} className=\"movie-item\">\n                <PartialMovieData movie={movie} />\n              </div>\n            ))}\n        </div>\n      )}\n      {moviesLoaded === true && movies && movies.length === 0 && !showError && (\n        <h3 className=\"text-center mt-5\">No movies.</h3>\n      )}\n\n      {showError && (\n        <ServerError handleClick={getMovies} errorDetails={errorDetails} />\n      )}\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport axios from 'axios';\nimport { useAlert } from 'react-alert';\n\nconst NewMovieScreen = () => {\n  const alert = useAlert();\n  const [movieId, setMovieId] = useState(0);\n  const [redirect, setRedirect] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [newMovie, setNewMovie] = useState({\n    name: '',\n    genre: 'Action',\n    rating: 1,\n    explicit: false,\n    plot: '',\n  });\n\n  function handleNameChange(event) {\n    setNewMovie({ ...newMovie, name: event.target.value });\n  }\n  function handleGenreChange(event) {\n    setNewMovie({ ...newMovie, genre: event.target.value });\n  }\n  function handleRatingChange(event) {\n    let rating = event.target.value;\n    if (rating > 10 || rating < 1) {\n      alert.show('Rating must be from 1 - 10', { type: 'error' });\n      return;\n    }\n    setNewMovie({ ...newMovie, rating });\n  }\n  function handleExplicitChange(event) {\n    const value = event.target.value === 'true' ? true : false;\n\n    setNewMovie({ ...newMovie, explicit: value });\n  }\n  function handlePlotChange(event) {\n    setNewMovie({ ...newMovie, plot: event.target.value.trim() });\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (isValidNewMovie()) {\n      setShowLoader(true);\n      try {\n        const { data } = await axios.post('/api/v1/movies', newMovie);\n        if (data.success) {\n          setShowLoader(false);\n          setMovieId(data.movie[0].id);\n          setNewMovie({\n            name: '',\n            genre: 'Action',\n            rating: 1,\n            explicit: false,\n            plot: '',\n          });\n          alert.show('Movie added!', { type: 'success' });\n          setRedirect(true);\n          return;\n        }\n      } catch (error) {\n        const { data } = error.response;\n        if (data.error) {\n          alert.show(data.error, { type: 'error' });\n        }\n        if (error.response.status === 500) {\n          alert.show(error.response.statusText, { type: 'error' });\n        }\n        setShowLoader(false);\n        return;\n      }\n    }\n    alert.show('Please fill out all fields.', { type: 'error' });\n  }\n\n  function isValidNewMovie() {\n    if (newMovie.name.trim().length === 0) return false;\n    if (newMovie.genre.trim().length === 0) return false;\n    if (newMovie.rating < 1 || newMovie.rating > 10) return false;\n    if (newMovie.plot.trim().length === 0) return false;\n    return true;\n  }\n\n  function renderRedirect() {\n    if (redirect) {\n      return <Redirect to={`/movies/${movieId}`} />;\n    }\n  }\n\n  return (\n    <div>\n      {renderRedirect()}\n      <h3>Add movie</h3>\n      <hr />\n      {showLoader && <LoadingSpinner />}\n      <Form onSubmit={handleSubmit}>\n        {/* Name */}\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={newMovie.name}\n            onChange={handleNameChange}\n            placeholder=\"Enter name\"\n          />\n        </Form.Group>\n        {/* Genre */}\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Genre</Form.Label>\n          <Form.Control\n            as=\"select\"\n            value={newMovie.genre}\n            onChange={handleGenreChange}\n            placeholder=\"Enter genre\"\n          >\n            <option value=\"Action\">Action</option>\n            <option value=\"Commedy\">Commedy</option>\n            <option value=\"Crime\">Crime</option>\n            <option value=\"Drama\">Drama</option>\n            <option value=\"Horror\">Horror</option>\n            <option value=\"Paranormal\">Paranormal</option>\n            <option value=\"Science Fiction\">Science Fiction</option>\n            <option value=\"Thriller\">Thriller</option>\n          </Form.Control>\n        </Form.Group>\n        {/* Rating */}\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Rating</Form.Label>\n          <Form.Control\n            type=\"number\"\n            max=\"10\"\n            min=\"1\"\n            value={newMovie.rating}\n            onChange={handleRatingChange}\n            placeholder=\"Enter rating\"\n          />\n        </Form.Group>\n        {/* Explicit content */}\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Explicit</Form.Label>\n          <br />\n          <Form.Check\n            type=\"radio\"\n            inline\n            name=\"isExplicit\"\n            onChange={handleExplicitChange}\n            checked={newMovie.explicit === true}\n            value=\"true\"\n            id={`yes`}\n            label=\"Yes\"\n          />\n          <Form.Check\n            type=\"radio\"\n            inline\n            name=\"isExplicit\"\n            onChange={handleExplicitChange}\n            checked={newMovie.explicit === false}\n            value=\"false\"\n            id={`no`}\n            label=\"No\"\n          />\n        </Form.Group>\n        {/* Plot  */}\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Plot</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"3\" onChange={handlePlotChange} />\n        </Form.Group>\n\n        <button className=\"btn btn-primary btn-sm\" type=\"submit\">\n          Submit\n        </button>\n      </Form>\n    </div>\n  );\n};\n\nexport default NewMovieScreen;\n","import React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useParams, Redirect, Link } from 'react-router-dom';\nimport { useAlert } from 'react-alert';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport axios from 'axios';\nimport ServerError from '../components/ServerError';\n\nconst EditMovieScren = () => {\n  const alert = useAlert();\n  const { id } = useParams();\n  const [redirect, setRedirect] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorDetails, setErrorDetails] = useState('');\n  const [movie, setMovie] = useState({\n    name: '',\n    genre: 'Action',\n    rating: 1,\n    explicit: false,\n    plot: '',\n    id: '',\n  });\n\n  useEffect(() => {\n    getMovie(id);\n  }, [id]);\n\n  async function getMovie(id) {\n    setShowError(false);\n    setShowLoader(true);\n    try {\n      const { data } = await axios.get(`/api/v1/movies/${id}`);\n      const { movie } = data;\n      setMovie(movie);\n      setShowLoader(false);\n    } catch (error) {\n      if (!error) return;\n      if (error.response.status === 500) {\n        setErrorDetails({ text: error.response.statusText, errorCode: 500 });\n      } else if (error.response.status === 429) {\n        setErrorDetails({ text: error.response.statusText, errorCode: 429 });\n      }\n      setShowError(true);\n    }\n  }\n\n  function handleNameChange(event) {\n    setMovie({ ...movie, name: event.target.value });\n  }\n  function handleGenreChange(event) {\n    setMovie({ ...movie, genre: event.target.value });\n  }\n  function handleRatingChange(event) {\n    let rating = event.target.value;\n    if (rating > 10 || rating < 1) {\n      alert.show('Rating must be from 1 - 10', { type: 'error' });\n      return;\n    }\n    setMovie({ ...movie, rating });\n  }\n  function handleExplicitChange(event) {\n    const value = event.target.value === 'true' ? true : false;\n\n    setMovie({ ...movie, explicit: value });\n  }\n  function handlePlotChange(event) {\n    setMovie({ ...movie, plot: event.target.value.trim() });\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (isValidmovie()) {\n      setShowLoader(true);\n      try {\n        const { data } = await axios.put(`/api/v1/movies/${id}`, movie);\n        if (data.success) {\n          setShowLoader(false);\n          alert.show('Movie updated!', { type: 'success' });\n          setRedirect(true);\n          return;\n        }\n      } catch (error) {\n        const { data } = error.response;\n        if (data.error) {\n          alert.show(data.error, { type: 'error' });\n        } else if (error.response.status === 500) {\n          alert.show('Something went wrong while proccesing your request.', {\n            type: 'error',\n          });\n        }\n        setShowLoader(false);\n        return;\n      }\n    }\n    alert.show('Please fill out all fields.', {\n      type: 'error',\n    });\n  }\n\n  function renderRedirect() {\n    if (redirect) {\n      return <Redirect to={`/movies/${id}`} />;\n    }\n  }\n\n  function isValidmovie() {\n    if (movie.name.trim().length === 0) return false;\n    if (movie.genre.trim().length === 0) return false;\n    if (movie.rating < 1 || movie.rating > 10) return false;\n    if (movie.plot.trim().length === 0) return false;\n    return true;\n  }\n\n  return (\n    <div>\n      {renderRedirect()}\n      <h3>Edit movie</h3>\n      <hr />\n      {showLoader && !showError && <LoadingSpinner />}\n      {!showError && !showLoader && movie && (\n        <Form onSubmit={handleSubmit}>\n          {/* Name */}\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              value={movie.name}\n              onChange={handleNameChange}\n              placeholder=\"Enter name\"\n            />\n          </Form.Group>\n          {/* Genre */}\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Genre</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={movie.genre}\n              onChange={handleGenreChange}\n              placeholder=\"Enter genre\"\n            >\n              <option value=\"Action\">Action</option>\n              <option value=\"Commedy\">Commedy</option>\n              <option value=\"Crime\">Crime</option>\n              <option value=\"Drama\">Drama</option>\n              <option value=\"Fantasy\">Fantasy</option>\n              <option value=\"Horror\">Horror</option>\n              <option value=\"Paranormal\">Paranormal</option>\n              <option value=\"Science Fiction\">Science Fiction</option>\n              <option value=\"Thriller\">Thriller</option>\n            </Form.Control>\n          </Form.Group>\n          {/* Rating */}\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Rating</Form.Label>\n            <Form.Control\n              type=\"number\"\n              max=\"10\"\n              min=\"1\"\n              value={movie.rating}\n              onChange={handleRatingChange}\n              placeholder=\"Enter rating\"\n            />\n          </Form.Group>\n          {/* Explicit content */}\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Explicit</Form.Label>\n            <br />\n            <Form.Check\n              type=\"radio\"\n              inline\n              name=\"isExplicit\"\n              onChange={handleExplicitChange}\n              checked={movie.explicit === true}\n              value=\"true\"\n              id={`yes`}\n              label=\"Yes\"\n            />\n            <Form.Check\n              type=\"radio\"\n              inline\n              name=\"isExplicit\"\n              onChange={handleExplicitChange}\n              checked={movie.explicit === false}\n              value=\"false\"\n              id={`no`}\n              label=\"No\"\n            />\n          </Form.Group>\n          {/* Plot  */}\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Plot</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              value={movie.plot}\n              onChange={handlePlotChange}\n            />\n          </Form.Group>\n\n          <button className=\"btn btn-primary btn-sm\" type=\"submit\">\n            Submit\n          </button>\n          <Link to={`/movies/${id}`}>\n            <button className=\"btn btn-warning btn-sm ml-2\">Cancel</button>\n          </Link>\n        </Form>\n      )}\n      {showError && (\n        <ServerError\n          handleClick={getMovie.bind(this, id)}\n          errorDetails={errorDetails}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default EditMovieScren;\n","import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { useAlert } from 'react-alert';\nimport Modal from 'react-bootstrap/Modal';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nconst ModalDelete = forwardRef(({ movieId }, ref) => {\n  const [redirect, setRedirect] = useState(false);\n  const alert = useAlert();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const deleteMovie = async () => {\n    const { data } = await axios.delete(`/api/v1/movies/${movieId}`);\n    if (data.success) {\n      alert.success('Movie deleted!');\n      setRedirect(true);\n      return;\n    }\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  useImperativeHandle(ref, () => {\n    return {\n      openModal: () => handleShow(),\n    };\n  });\n\n  function renderRedirect() {\n    if (redirect) {\n      return <Redirect to={`/`} />;\n    }\n  }\n  return (\n    <div ref={ref}>\n      {renderRedirect()}\n      <Modal show={show} animation={false} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete movie</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure?</Modal.Body>\n        <Modal.Footer>\n          <button className=\"btn btn-primary btn-sm\" onClick={handleClose}>\n            Close\n          </button>\n          <button className=\"btn btn-danger btn-sm\" onClick={deleteMovie}>\n            Delete\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n});\n\nexport default ModalDelete;\n","import React, { useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport ModalDelete from './ModalDelete';\nimport Rating from './Rating';\n\nconst Movie = ({ movie }) => {\n  const ref = useRef();\n  const openModal = () => {\n    ref.current.openModal();\n  };\n  return (\n    <>\n      <h1 className=\"mt-4\">{movie.name}</h1>\n      <Rating stars={movie.rating} />\n      <h4 className=\"mt-3\">GENRE: {movie.genre}</h4>\n      <hr />\n      <p>{movie.plot}</p>\n      <hr />\n      <p>\n        {movie.explicit === false && (\n          <span className=\"text-success\">\n            <i className=\"fas fa-check\"></i> This movie doesn't contain explicit\n            content.\n          </span>\n        )}\n        {movie.explicit === true && (\n          <span className=\"text-danger\">\n            <i className=\"fas fa-exclamation\"></i> This movie contains explicit\n            content.\n          </span>\n        )}\n      </p>\n      <div className=\"movie-controls mt-4\">\n        <Link to={`/movies/${movie.id}/edit`}>\n          <button className=\"btn btn-primary btn-sm\">\n            <i className=\"far fa-edit\"></i> Edit\n          </button>\n        </Link>\n        <button onClick={openModal} className=\"btn btn-danger btn-sm\">\n          <i className=\"fa fa-trash\"></i> Delete\n        </button>\n        <ModalDelete ref={ref} movieId={movie.id} />\n      </div>\n    </>\n  );\n};\n\nexport default Movie;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { useParams, Link } from 'react-router-dom';\nimport Movie from '../components/Movie';\nimport ServerError from '../components/ServerError';\n\nconst MovieScreen = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const [errorDetails, setErrorDetails] = useState('');\n  const [showError, setShowError] = useState(false);\n  const [movieLoaded, setMovieLoaded] = useState(false);\n\n  const getMovie = useCallback(async () => {\n    setShowError(false);\n    try {\n      const { data } = await axios.get(`/api/v1/movies/${id}`);\n      setMovieLoaded(true);\n      setMovie(data.movie);\n    } catch (error) {\n      errorDetailsFormater(error);\n      setShowError(true);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    getMovie();\n  }, [getMovie]);\n\n  function errorDetailsFormater(errObj) {\n    const { response } = errObj;\n    if (!response) return;\n    if (response.status === 500) {\n      setErrorDetails({\n        text: 'Internal server error.',\n        errorCode: response.status,\n      });\n    }\n    if (response.status === 429) {\n      setErrorDetails({\n        text: 'Too many requests. Wait 3 minutes.',\n        errorCode: response.status,\n      });\n    }\n    if (response.status === 404) {\n      setErrorDetails({\n        text: 'Resource not fonud.',\n        errorCode: response.status,\n      });\n    }\n  }\n\n  return (\n    <div>\n      <h3>Movie details</h3>\n      <hr />\n      <Link to=\"/\">\n        <button className=\"btn btn-primary btn-sm\">\n          <i className=\"far fa-arrow-alt-circle-left\"></i> Back\n        </button>\n      </Link>\n      {movieLoaded === false && !showError && <LoadingSpinner />}\n      {movie && movieLoaded === true && !showError && <Movie movie={movie} />}\n      {movieLoaded === false && showError && (\n        <ServerError handleClick={getMovie} errorDetails={errorDetails} />\n      )}\n    </div>\n  );\n};\n\nexport default MovieScreen;\n","import React from 'react';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Container from 'react-bootstrap/Container';\n\nimport HomeScreen from './screens/HomeScreen';\nimport NewMovieScreen from './screens/NewMovieScreen';\nimport EditMovieScreen from './screens/EditMovieScreen';\nimport MovieScreen from './screens/MovieScreen';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Container>\n        <main className=\"mt-2\">\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/movies/:id\" component={MovieScreen} exact />\n          <Route path=\"/movies/:id/edit\" component={EditMovieScreen} />\n          <Route path=\"/add\" component={NewMovieScreen} />\n        </main>\n      </Container>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './custom.bootstrap.css';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.TOP_CENTER,\n  timeout: 2000,\n  offset: '70px',\n  // you can also just use 'scale'\n  transition: transitions.FADE,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}